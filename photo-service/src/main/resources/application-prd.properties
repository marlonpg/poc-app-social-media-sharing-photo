spring.application.name=photo-service
server.port=8081 # Or a different port for prod if needed

# H2 Database (adjust for actual prod DB later)
spring.datasource.url=jdbc:h2:file:./data/photodb_prd;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE
spring.datasource.driverClassName=org.h2.Driver
spring.datasource.username=sa
spring.datasource.password= # Use environment variables or secrets management for prod passwords

# H2 Console (typically disabled in prod)
spring.h2.console.enabled=false
spring.h2.console.path=/h2-console-photo

# JPA/Hibernate
spring.jpa.show-sql=false # Disabled for prod
spring.jpa.hibernate.ddl-auto=validate # Or none, depending on strategy
spring.jpa.properties.hibernate.format_sql=false # Disabled for prod

# Liquibase
spring.liquibase.change-log=db/photo.changelog-master.xml # Specific to photo-service

# File upload settings (adjust paths for prod environment)
file.upload-dir=/mnt/uploads-photo-prd
spring.servlet.multipart.max-file-size=10MB
spring.servlet.multipart.max-request-size=10MB

# Security (photo-service will validate tokens, so it needs a secret key)
# This key MUST be the same as the one used by auth-service to sign the tokens.
# Use environment variables or secrets management for prod keys.
security.jwt.secret-key=${JWT_SECRET_KEY:Ub5tncuIRtf0YmbeHQeyKIfjhAulA2sj//1/cpeSn4g=} # Example using env var with fallback
security.jwt.expiration-time=86400000
